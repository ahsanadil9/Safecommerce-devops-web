version: '3.8'

services:
  # Frontend service
  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_URL=http://gateway:3001
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - gateway

  # API Gateway
  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - AUTH_SERVICE_URL=http://auth:3002
      - PRODUCT_SERVICE_URL=http://products:3003
      - ORDER_SERVICE_URL=http://orders:3004
      - NOTIFICATION_SERVICE_URL=http://notifications:3005
    volumes:
      - ../gateway:/app
      - /app/node_modules
    depends_on:
      - auth
      - products
      - orders
      - notifications

  # Authentication Service
  auth:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - JWT_SECRET=your_jwt_secret
      - DATABASE_URL=mongodb://mongo:27017/auth
    volumes:
      - ../services/auth:/app
      - /app/node_modules
    depends_on:
      - mongo

  # Products Service
  products:
    build:
      context: ../services/products
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - DATABASE_URL=mongodb://mongo:27017/products
    volumes:
      - ../services/products:/app
      - /app/node_modules
    depends_on:
      - mongo

  # Orders Service
  orders:
    build:
      context: ../services/orders
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - DATABASE_URL=mongodb://mongo:27017/orders
    volumes:
      - ../services/orders:/app
      - /app/node_modules
    depends_on:
      - mongo

  # Notifications Service
  notifications:
    build:
      context: ../services/notifications
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - DATABASE_URL=mongodb://mongo:27017/notifications
    volumes:
      - ../services/notifications:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis

  # MongoDB (Database)
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Redis for caching and pub/sub
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ../infra/grafana/provisioning:/etc/grafana/provisioning
      - ../infra/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana

  # Nginx for reverse proxy and WAF
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../infra/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - gateway

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data: